test1<-read.csv('/Users/yanmemgxing/Desktop/my files/2021/mentor-mentee/Qing Ke/fields/chemistry/test1_0.25.csv',sep=',',header=TRUE) #chemistry
CutPoint1<-read.csv('/Users/yanmemgxing/Desktop/my files/2021/mentor-mentee/Qing Ke/fields/chemistry/CutPoint1_0.25.csv',sep=',',header=TRUE)   #chemistry
filter_c1<-c('StopYear','First5YearPubsOfMentee','First5YearCitationOfMentee','First5YearCollaOfMentee','BigOrSmall','TotalPubsOfMentor','TotalCitationOfMentor','TotalCollaOfMentor','YearlyPubsOfMentor','YearlyCitationOfMentor','YearllyCollaOfMentor','CareerAgeOfMentorInTraining','PubsOfMentorInTraning','CollaPubsOfWithMentor','NumOfMenteesOfTheMenteeIn20')
sub_test1 = subset(test1,StopYear>1960&StopYear<=1995,select=filter_c1)

#todrop1<-c('NumOfMenteesOfTheMenteeIn20')
todrop1<-c('NumOfMenteesOfTheMenteeIn20','BigOrSmall','CareerAgeOfMentorInTraining')
StopYearCut<-c(1960,1980,1990,1995)
mat1 <- cem(treatment="BigOrSmall", data=sub_test1, drop=todrop1,cutpoints = list(TotalPubsOfMentor = CutPoint1[['TotalPubsOfMentor']],YearlyCitationOfMentor=CutPoint1[['YearlyCitationOfMentor']],YearlyPubsOfMentor=CutPoint1[['YearlyPubsOfMentor']],YearllyCollaOfMentor=CutPoint1[['YearllyCollaOfMentor']],TotalCollaOfMentor=CutPoint1[['TotalCollaOfMentor']],TotalCitationOfMentor=CutPoint1[['TotalCitationOfMentor']],CareerAgeOfMentorInTraining=CutPoint1[['CareerAgeOfMentorInTraining']],StopYear=StopYearCut,First5YearPubsOfMentee=CutPoint1[['First5YearPubsOfMentee']],First5YearCollaOfMentee=CutPoint1[['First5YearCollaOfMentee']],First5YearCitationOfMentee=CutPoint1[['First5YearCitationOfMentee']],PubsOfMentorInTraning=CutPoint1[['PubsOfMentorInTraning']],CollaPubsOfWithMentor=CutPoint1[['CollaPubsOfWithMentor']]),keep.all=TRUE)

mat1


MATCHED = sub_test1[which(mat1[["matched"]]==TRUE),]       #得到 matched data
MATCHED_chem<-MATCHED

#model1<-lm(NumOfMenteesOfTheMenteeIn20 ~.,data=MATCHED)

model1<-lm(NumOfMenteesOfTheMenteeIn20 ~ BigOrSmall+First5YearPubsOfMentee+First5YearCitationOfMentee+First5YearCollaOfMentee+TotalPubsOfMentor+TotalCitationOfMentor+
TotalCollaOfMentor+YearlyPubsOfMentor+YearlyCitationOfMentor+YearllyCollaOfMentor+PubsOfMentorInTraning+CollaPubsOfWithMentor+CareerAgeOfMentorInTraining,data=MATCHED)

#model1<-lm(NumOfMenteesOfTheMenteeIn20 ~ BigOrSmall+First5YearPubsOfMentee+First5YearCitationOfMentee+First5YearCollaOfMentee+TotalPubsOfMentor+TotalCitationOfMentor+
TotalCollaOfMentor+YearlyPubsOfMentor+YearlyCitationOfMentor+YearllyCollaOfMentor+PubsOfMentorInTraning+CollaPubsOfWithMentor+CareerAgeOfMentorInTraining+StopYear,data=MATCHED)

summary(model1)

#step函数实现逐步回归法
model1_1<-step(object = model1,trace = 0)
summary(model1_1)


#未匹配数据回归 for neuro
test1<-read.csv('/Users/yanmemgxing/Desktop/my files/2021/mentor-mentee/Qing Ke/fields/neuro/test1_0.25.csv',sep=',',header=TRUE) #neuro
CutPoint1<-read.csv('/Users/yanmemgxing/Desktop/my files/2021/mentor-mentee/Qing Ke/fields/neuro/CutPoint1_0.25.csv',sep=',',header=TRUE)   #neuro
sub_test1 = subset(test1,StopYear>1960&StopYear<=1988,select=filter_c1) # for neuro
model1<-lm(NumOfMenteesOfTheMenteeIn20 ~.,data=sub_test1)

summary(model1)
model1_1<-step(object = model1,trace = 0)
summary(model1_1)



model1_neuro<-model1model1_1_neuro<-model1_1

# k-fold cross validation 交叉验证 for neuro
library(caret)
train_control <- trainControl(method = "cv", number = 10)

# train the model on training set


model <- train(NumOfMenteesOfTheMenteeIn20 ~ .,               data = sub_test1,               trControl = train_control,               method = "lm")
# print cv scores
print(model)
#summary(model)
k_fold_neuro = model


#导出 latex table
library(stargazer)
stargazer(model1_chem, model1_phy, model1_neuro,model1_1_chem,model1_1_phy,model1_1_neuro,title="Regression Results", align=TRUE)



# k-fold cross validation 交叉验证
library(caret)
train_control <- trainControl(method = "cv", number = 10)

# train the model on training set

MATCHED<-MATCHED_chem

model <- train(NumOfMenteesOfTheMenteeIn20 ~ BigOrSmall+First5YearPubsOfMentee+First5YearCitationOfMentee+First5YearCollaOfMentee+TotalPubsOfMentor+TotalCitationOfMentor+
TotalCollaOfMentor+YearlyPubsOfMentor+YearlyCitationOfMentor+YearllyCollaOfMentor+PubsOfMentorInTraning+CollaPubsOfWithMentor+CareerAgeOfMentorInTraining,               data = MATCHED,               trControl = train_control,               method = "lm")
# print cv scores
print(model)
#summary(model)
k_fold_chem = model



